{"ast":null,"code":"var _jsxFileName = \"F:\\\\Investment_calculator\\\\src\\\\components\\\\UserInput\\\\UserInput.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n\n// const intitalUserInput = {\n//   \"current-savings\": 6999,\n//   \"yearly-contribution\": 690,\n//   \"expected-return\": 7,\n//   duration: 10,\n// };\n\n// const UserInput = (props) => {\n//   const [userInput, setUserInput] = useState(intitalUserInput);\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n\n//     props.onCalculate(userInput);\n//   };\n\n//   const resetHandler = () => {\n//     setUserInput(intitalUserInput);\n//   };\n//   const inputChangeHandler = (input, value) => {\n//     setUserInput((prevInput) => {\n//       return {\n//         ...prevInput,\n//         [input]: +value,\n//       };\n//     });\n//   };\n//   return (\n//     <form onSubmit={submitHandler} className=\"form\">\n//       <div className=\"input-group\">\n//         <p>\n//           <label htmlFor=\"current-savings\">Current Savings ($)</label>\n//           <input\n//             onChange={(event) =>\n//               inputChangeHandler(\"current-savings\", event.target.value)\n//             }\n//             value={userInput[\"current-savings\"]}\n//             type=\"number\"\n//             id=\"current-savings\"\n//           />\n//         </p>\n//         <p>\n//           <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n//           <input\n//             onChange={(event) =>\n//               inputChangeHandler(\"yearly-contribution\", event.target.value)\n//             }\n//             value={userInput[\"yearly-contribution\"]}\n//             type=\"number\"\n//             id=\"yearly-contribution\"\n//           />\n//         </p>\n//       </div>\n//       <div className=\"input-group\">\n//         <p>\n//           <label htmlFor=\"expected-return\">\n//             Expected Interest (%, per year)\n//           </label>\n//           <input\n//             onChange={(event) =>\n//               inputChangeHandler(\"expected-return\", event.target.value)\n//             }\n//             value={userInput[\"expected-return\"]}\n//             type=\"number\"\n//             id=\"expected-return\"\n//           />\n//         </p>\n//         <p>\n//           <label htmlFor=\"duration\">Investment Duration (years)</label>\n//           <input\n//             onChange={(event) =>\n//               inputChangeHandler(\"duration\", event.target.value)\n//             }\n//             value={userInput[\"duration\"]}\n//             type=\"number\"\n//             id=\"duration\"\n//           />\n//         </p>\n//       </div>\n//       <p className=\"actions\">\n//         <button onClick={resetHandler} type=\"reset\" className=\"buttonAlt\">\n//           Reset\n//         </button>\n//         <button type=\"submit\" className=\"button\">\n//           Calculate\n//         </button>\n//       </p>\n//     </form>\n//   );\n// };\n// export default UserInput;\nimport { useState } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\nimport UserInput from \"./components/UserInput/UserInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState(null);\n  const calculateHandler = userInput => {\n    setUserInput(userInput);\n  };\n  const yearlyData = [];\n  if (userInput) {\n    let currentSavings = +userInput[\"current-savings\"];\n    const yearlyContribution = +userInput[\"yearly-contribution\"];\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","ResultsTable","UserInput","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","calculateHandler","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","_c","$RefreshReg$"],"sources":["F:/Investment_calculator/src/components/UserInput/UserInput.js"],"sourcesContent":["// import { useState } from \"react\";\r\n\r\n// const intitalUserInput = {\r\n//   \"current-savings\": 6999,\r\n//   \"yearly-contribution\": 690,\r\n//   \"expected-return\": 7,\r\n//   duration: 10,\r\n// };\r\n\r\n// const UserInput = (props) => {\r\n//   const [userInput, setUserInput] = useState(intitalUserInput);\r\n\r\n//   const submitHandler = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     props.onCalculate(userInput);\r\n//   };\r\n\r\n//   const resetHandler = () => {\r\n//     setUserInput(intitalUserInput);\r\n//   };\r\n//   const inputChangeHandler = (input, value) => {\r\n//     setUserInput((prevInput) => {\r\n//       return {\r\n//         ...prevInput,\r\n//         [input]: +value,\r\n//       };\r\n//     });\r\n//   };\r\n//   return (\r\n//     <form onSubmit={submitHandler} className=\"form\">\r\n//       <div className=\"input-group\">\r\n//         <p>\r\n//           <label htmlFor=\"current-savings\">Current Savings ($)</label>\r\n//           <input\r\n//             onChange={(event) =>\r\n//               inputChangeHandler(\"current-savings\", event.target.value)\r\n//             }\r\n//             value={userInput[\"current-savings\"]}\r\n//             type=\"number\"\r\n//             id=\"current-savings\"\r\n//           />\r\n//         </p>\r\n//         <p>\r\n//           <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\r\n//           <input\r\n//             onChange={(event) =>\r\n//               inputChangeHandler(\"yearly-contribution\", event.target.value)\r\n//             }\r\n//             value={userInput[\"yearly-contribution\"]}\r\n//             type=\"number\"\r\n//             id=\"yearly-contribution\"\r\n//           />\r\n//         </p>\r\n//       </div>\r\n//       <div className=\"input-group\">\r\n//         <p>\r\n//           <label htmlFor=\"expected-return\">\r\n//             Expected Interest (%, per year)\r\n//           </label>\r\n//           <input\r\n//             onChange={(event) =>\r\n//               inputChangeHandler(\"expected-return\", event.target.value)\r\n//             }\r\n//             value={userInput[\"expected-return\"]}\r\n//             type=\"number\"\r\n//             id=\"expected-return\"\r\n//           />\r\n//         </p>\r\n//         <p>\r\n//           <label htmlFor=\"duration\">Investment Duration (years)</label>\r\n//           <input\r\n//             onChange={(event) =>\r\n//               inputChangeHandler(\"duration\", event.target.value)\r\n//             }\r\n//             value={userInput[\"duration\"]}\r\n//             type=\"number\"\r\n//             id=\"duration\"\r\n//           />\r\n//         </p>\r\n//       </div>\r\n//       <p className=\"actions\">\r\n//         <button onClick={resetHandler} type=\"reset\" className=\"buttonAlt\">\r\n//           Reset\r\n//         </button>\r\n//         <button type=\"submit\" className=\"button\">\r\n//           Calculate\r\n//         </button>\r\n//       </p>\r\n//     </form>\r\n//   );\r\n// };\r\n// export default UserInput;\r\nimport { useState } from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\r\nimport UserInput from \"./components/UserInput/UserInput\";\r\n\r\nfunction App() {\r\n  const [userInput, setUserInput] = useState(null);\r\n\r\n  const calculateHandler = (userInput) => {\r\n    setUserInput(userInput);\r\n  };\r\n\r\n  const yearlyData = [];\r\n\r\n  if (userInput) {\r\n    let currentSavings = +userInput[\"current-savings\"];\r\n    const yearlyContribution = +userInput[\"yearly-contribution\"];\r\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\r\n    const duration = +userInput[\"duration\"];\r\n\r\n    for (let i = 0; i < duration; i++) {\r\n      const yearlyInterest = currentSavings * expectedReturn;\r\n      currentSavings += yearlyInterest + yearlyContribution;\r\n      yearlyData.push({\r\n        year: i + 1,\r\n        yearlyInterest: yearlyInterest,\r\n        savingsEndOfYear: currentSavings,\r\n        yearlyContribution: yearlyContribution,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <UserInput onCalculate={calculateHandler} />\r\n\r\n      <ResultsTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,SAAS,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMU,gBAAgB,GAAIF,SAAS,IAAK;IACtCC,YAAY,CAACD,SAAS,CAAC;EACzB,CAAC;EAED,MAAMG,UAAU,GAAG,EAAE;EAErB,IAAIH,SAAS,EAAE;IACb,IAAII,cAAc,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC;IAClD,MAAMK,kBAAkB,GAAG,CAACL,SAAS,CAAC,qBAAqB,CAAC;IAC5D,MAAMM,cAAc,GAAG,CAACN,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMO,QAAQ,GAAG,CAACP,SAAS,CAAC,UAAU,CAAC;IAEvC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;EACF;EAEA,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVpB,OAAA,CAACF,SAAS;MAACuB,WAAW,EAAEhB;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5CpB,OAAA,CAACH,YAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAAClB,EAAA,CApCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}